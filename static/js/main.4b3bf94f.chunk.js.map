{"version":3,"sources":["components/InputBar/InputBar.jsx","components/panes/CodeMirrorEditorPane/CodeMirrorEditorPane.jsx","components/panes/KeyValuePane/AddKeyValue/AddKeyValue.jsx","components/panes/KeyValuePane/KeyValuePane.jsx","components/tab-groups/RequestTabGroup/RequestTabGroup.jsx","utils/helpers.js","components/panels/RequestPanel/RequestPanel.jsx","components/panes/ResponseHeadersPane/ResponseHeadersPane.jsx","components/tab-groups/ResponseTabGroup/ResponseTabGroup.jsx","components/panels/ResponsePanel/ResponseMeta/ResponseMeta.jsx","components/panels/ResponsePanel/ResponsePanel.jsx","App/App.jsx","index.js"],"names":["inputConfig","key","text","value","InputBar","url","setUrl","httpMethod","setHttpMethod","onInputSend","className","Segment","color","Input","fluid","size","placeholder","Select","compact","defaultValue","options","onChange","_e","data","e","target","Button","basic","onClick","basicExtensions","basicSetup","keymap","of","defaultTabBinding","json","EditorState","tabSize","CodeMirrorEditorPane","doc","setDoc","isEditable","editorRef","useRef","useEffect","current","state","create","extensions","EditorView","updateListener","view","docChanged","editable","parent","destroy","ref","AddKeyValue","keyPair","setKeyPair","onKeyPairRemove","useState","keyValue","setKeyValue","debouncedKeyValue","setDebouncedKeyValue","timerId","setTimeout","clearTimeout","handleOnChange","prevState","id","name","Grid","divided","Row","columns","Column","computer","tablet","mobile","KeyValuePane","keyPairs","setKeyPairs","renderedList","map","kpValue","elementIndex","findIndex","element","newKeyValues","keyItem","valueItem","onKeyPairUpdate","filter","x","Fragment","uuidv4","RequestTabGroup","queryParams","setQueryParams","headers","setHeaders","panes","menuItem","pane","Tab","Pane","renderActiveOnly","convertKeyValueToObject","reduce","pair","keyPairInitState","RequestPanel","setResponse","setLoading","handleOnInputSend","a","preventDefault","requestBody","toString","console","log","JSON","parse","alert","axios","method","params","response","Container","width","ResponseHeaders","responseHeaders","Object","entries","forEach","push","renderedHeaders","ResponseTabGroup","loading","ResponseMeta","status","time","ResponsePanel","jsonResponse","stringify","hasResponse","hasCustomData","hasData","hasHeaders","prettyBytes","length","customData","App","updateEndTime","Date","getTime","config","startTime","interceptors","request","use","Promise","reject","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4b3bf94f.chunk.js","sourcesContent":["import React from 'react';\nimport { \n  Input, \n  Segment, \n  Select,\n  Button,\n} from 'semantic-ui-react'\n\nimport './InputBar.css';\n\nconst inputConfig = [\n    {\n      key : 'get',\n      text: 'GET',\n      value: 'GET'\n    },\n    {\n      key : 'post',\n      text: 'POST',\n      value: 'POST'\n    },\n    {\n      key : 'put',\n      text: 'PUT',\n      value: 'PUT'\n    },\n    {\n      key : 'patch',\n      text: 'PATCH',\n      value: 'PATCH'\n    },\n    {\n      key : 'delete',\n      text: 'DELETE',\n      value: 'DELETE'\n    }\n  ] \n\nconst size = 'big';\nconst color = 'orange';\n\nconst InputBar = ({ url, setUrl, httpMethod, setHttpMethod, onInputSend }) => {\n\n  return (\n    <div className=\"input-bar\">\n      <Segment color='orange'>\n        <form>\n          <Input\n            fluid\n            size={size}\n            placeholder='https://mysite.com'>\n            <div className=\"selection\">\n              <Select\n                compact\n                defaultValue={httpMethod} \n                options={inputConfig}\n                onChange={(_e, data)=> setHttpMethod(data.value)} />\n            </div>\n            <input \n                value={url} \n                onChange={(e) => setUrl(e.target.value)}\n              />   \n            <div className=\"button\">\n              <Button\n                basic\n                color={color}\n                size={size} \n                onClick={(e)=> onInputSend(e)}>\n                  Send\n              </Button>\n            </div>\n          </Input>\n        </form>\n      </Segment>\n    </div>\n  )\n};\n\nexport default InputBar;\n\n","import React, { useRef, useEffect } from 'react';\nimport { EditorView, keymap } from '@codemirror/view';\nimport { EditorState, basicSetup } from '@codemirror/basic-setup';\nimport { defaultTabBinding } from '@codemirror/commands';\nimport { json } from '@codemirror/lang-json';\nimport './CodeMirrorEditorPane.css';\n\nconst basicExtensions = [\n  basicSetup,\n  keymap.of([defaultTabBinding]),\n  json(),\n  EditorState.tabSize.of(2)\n]\n\nconst CodeMirrorEditorPane = ({ doc, setDoc, isEditable=true }) => {\n\n  const editorRef = useRef();\n\n  useEffect(() => {  \n    if(editorRef.current === null) return;\n    \n    const state = EditorState.create({\n      doc: doc,\n      extensions: [\n        ...basicExtensions,\n        EditorView.updateListener.of((view) => {\n          if (view.docChanged) {\n            setDoc(view.state.doc);\n          }\n        }),\n        EditorView.editable.of(isEditable)\n      ]\n    });\n\n    const view = new EditorView({\n      state,\n      parent: editorRef.current\n    });\n\n    return () => {\n      view.destroy();\n    }\n\n  }, [editorRef.current, doc])\n\n\n  return (\n    <div className=\"editor-pane\" ref={editorRef}></div>\n  )\n}\n\nexport default CodeMirrorEditorPane;","import React, { useState, useEffect } from 'react';\nimport { \n  Input, \n  Button,\n  Grid\n} from 'semantic-ui-react';\n\nconst AddKeyValue = ({ keyPair, setKeyPair, onKeyPairRemove }) => {\n  //https://stackoverflow.com/questions/63710791/react-hooks-handle-multiple-inputs\n\n  const [keyValue, setKeyValue] = useState(keyPair);\n  const [debouncedKeyValue, setDebouncedKeyValue] = useState(keyValue);\n\n  useEffect(()=> {\n    \n    const timerId = setTimeout(() => {\n      setDebouncedKeyValue(keyValue);\n    }, 1000);\n\n    return () => {\n      clearTimeout(timerId);\n    }\n\n  }, [keyValue]);\n\n\n  useEffect(() => {\n\n    setKeyPair(debouncedKeyValue);\n\n  }, [debouncedKeyValue])\n\n\n  const handleOnChange = (e) => {\n    // define a state variable to keep track of the key and value together\n    // https://stackoverflow.com/questions/63710791/react-hooks-handle-multiple-inputs\n    setKeyValue((prevState) => ({\n      ...prevState,\n      id: keyValue.id,\n      [e.target.name] : e.target.value\n    }));\n  }\n\n  return (\n    <div className=\"add-key-value\">\n      <Grid \n        divided='vertically'>\n        <Grid.Row\n          columns={3}>\n          <Grid.Column\n            computer={7}\n            tablet={6}\n            mobile={5}>\n            <Input \n              fluid \n              placeholder='Key'\n              name='keyItem'\n              onChange={(e) => handleOnChange(e)}/>\n          </Grid.Column>\n\n          <Grid.Column\n            computer={7}\n            tablet={6}\n            mobile={5}>\n            <Input \n              fluid \n              placeholder='Value'\n              name='valueItem'\n              onChange={(e) => handleOnChange(e)}/>\n          </Grid.Column>\n\n          <Grid.Column\n            computer={2}\n            tablet={4}\n            mobile={6}>\n            <Button\n              fluid\n              onClick={()=> onKeyPairRemove(keyPair)}\n              >Remove\n            </Button>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n}\n\nexport default AddKeyValue;","import React from 'react';\nimport AddKeyValue from './AddKeyValue/AddKeyValue';\nimport { Button } from 'semantic-ui-react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst color = 'orange';\n\nconst KeyValuePane = ({ keyPairs, setKeyPairs }) => {\n\n  const onKeyPairAdd = () => {\n    setKeyPairs(keyPairs => [...keyPairs, {\n      id: uuidv4(),\n      keyItem: '',\n      valueItem: ''\n    }])\n  }\n\n  const onKeyPairRemove = (keyPair) => {\n    let newKeyValues = [...keyPairs];\n    newKeyValues = newKeyValues.filter(x => x.id !== keyPair.id);\n    setKeyPairs(newKeyValues);\n  }\n\n  const onKeyPairUpdate = (keyPair) => {\n    // Reference:\n    // https://javascript.plainenglish.io/react-updating-a-value-in-state-array-7bae7c7eaef9\n\n    // first look for the elements index\n\n    const elementIndex = keyPairs.findIndex(element => element.id === keyPair.id);\n    let newKeyValues = [...keyPairs];\n    \n    newKeyValues[elementIndex] = {\n      ...newKeyValues[elementIndex], \n      keyItem: keyPair.keyItem,\n      valueItem: keyPair.valueItem\n    };\n    \n    setKeyPairs(newKeyValues);\n  };\n\n\n  const renderedList = keyPairs.map((keyPair) => {\n    return <AddKeyValue\n        key={keyPair.id}\n        keyPair={keyPair}\n        setKeyPair={(kpValue) => onKeyPairUpdate(kpValue)}\n        onKeyPairRemove={() => onKeyPairRemove(keyPair)} />\n    });\n\n  return (\n    <React.Fragment>\n      {renderedList}\n      <Button\n        basic\n        color={color} \n        onClick={() => onKeyPairAdd()}>Add</Button>\n    </React.Fragment>\n  )\n\n}\n\nexport default KeyValuePane;","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport CodeMirrorEditorPane from '../../panes/CodeMirrorEditorPane/CodeMirrorEditorPane';\nimport KeyValuePane from '../../panes/KeyValuePane/KeyValuePane';\n\nconst RequestTabGroup = ({ doc, setDoc, queryParams, setQueryParams, headers, setHeaders }) => {\n  \n  // configuration for panes\n  const panes = [\n    {\n      menuItem: 'Query Params',\n      pane: <Tab.Pane key=\"query-params\">\n              <KeyValuePane\n                keyPairs={queryParams}\n                setKeyPairs={setQueryParams}\n                />\n            </Tab.Pane>  \n    },\n    {\n      menuItem: 'Headers',\n      pane: <Tab.Pane key=\"headers\">\n              <KeyValuePane\n                keyPairs={headers}\n                setKeyPairs={setHeaders}/>\n            </Tab.Pane>  \n    },\n    { \n      menuItem: 'Body', \n      pane: <Tab.Pane key=\"json-editor\">\n              <CodeMirrorEditorPane \n                doc={doc}\n                setDoc={setDoc}/>\n            </Tab.Pane> \n    }\n  ]\n\n  return (\n    <div className=\"request-tabs\">\n      <Tab \n        renderActiveOnly={false}\n        panes={panes}\n      />\n    </div>\n  );\n\n};\n\nexport default RequestTabGroup;\n","const convertKeyValueToObject = (keyPairs) => {\n  \n  return [...keyPairs].reduce((data, pair) => {\n    const key = pair.keyItem;\n    const value = pair.valueItem;\n\n    if(key === '') return data;\n    return {\n      ...data, [key]: value\n    }\n  }, {})\n}\n\nexport {convertKeyValueToObject};","import React, { useState } from 'react';\nimport { \n  Container, Grid\n} from 'semantic-ui-react';\nimport InputBar from '../../InputBar/InputBar';\nimport RequestTabGroup from '../../tab-groups/RequestTabGroup/RequestTabGroup';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { convertKeyValueToObject } from '../../../utils/helpers';\n\nconst keyPairInitState = [\n  {\n    id: uuidv4(),\n    keyItem : '',\n    valueItem : ''\n  }\n] \n\nconst RequestPanel = ({ setResponse, setLoading }) => {\n\n  const [ url, setUrl ] = useState('https://jsonplaceholder.typicode.com/todos/1');\n  const [ httpMethod, setHttpMethod ] = useState('GET');\n\n  const [ doc, setDoc ] = useState('{\\n\\t\\n}')\n\n  const [ queryParams, setQueryParams ] = useState(keyPairInitState);\n  const [ headers, setHeaders ] = useState(keyPairInitState);\n  \n  const handleOnInputSend = async (e) => {\n    setLoading(true);\n    \n    e.preventDefault();\n    const requestBody = doc.toString();\n    console.log('url ', url);\n    console.log('http method', httpMethod);\n    console.log('headers', headers);\n    console.log('query params ', queryParams)\n    console.log('body ', requestBody);\n\n    let data;\n    try {\n      data = JSON.parse(requestBody);\n    } catch (e) {\n      alert('Something is wrong with the JSON data.')\n    }\n\n    try {\n\n      const response = await axios({\n        url: url,\n        method: httpMethod,\n        params: convertKeyValueToObject(queryParams),\n        headers: convertKeyValueToObject(headers),\n        data\n      })\n  \n      setResponse(response);\n\n    } catch(e){\n\n      console.log(e);\n      setResponse(e);\n    }\n\n\n    setLoading(false);\n\n  }\n\n  return (\n    <div>\n      <Container fluid>\n        <InputBar\n          url={url} \n          setUrl={setUrl}\n          httpMethod={httpMethod}\n          setHttpMethod={setHttpMethod}\n          onInputSend={handleOnInputSend}/>\n        <br/>\n        <Grid>\n          <Grid.Row columns={1}>\n            <Grid.Column width={16}>\n              <RequestTabGroup\n                doc={'{\\n\\t\\n}'}\n                setDoc={setDoc}\n                queryParams={queryParams}\n                setQueryParams={setQueryParams}\n                headers={headers}\n                setHeaders={setHeaders}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n\n  )\n}\n\nexport default RequestPanel;","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nconst ResponseHeaders = ({response }) => {\n\n  const responseHeaders = [];\n\n  if(!(response == null)) {\n    if('headers' in response){\n      Object.entries(response.headers).forEach(([key, value]) => {\n        responseHeaders.push({\n          key: key,\n          value: value\n        })\n      })\n    }\n  }\n\n  const renderedHeaders = responseHeaders.map(({key, value}) => {\n    \n    return (\n      <Grid.Row key={key}>\n        <Grid.Column \n          computer={2}\n          tablet={5}\n          mobile={7}>\n          {key}\n        </Grid.Column>\n        <Grid.Column \n          computer={3}\n          tablet={5}\n          mobile={7}>\n          {value}\n        </Grid.Column>\n      </Grid.Row>\n    )\n\n  })\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column \n          computer={2}\n          tablet={5}\n          mobile={7}>\n          <h4>Key</h4>\n        </Grid.Column>\n        <Grid.Column\n          computer={3}\n          tablet={5}\n          mobile={7}>\n          <h4>Value</h4>\n        </Grid.Column>\n      </Grid.Row>\n      {renderedHeaders}\n    </Grid>\n  );\n};\n\nexport default ResponseHeaders;","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport CodeMirrorEditorPane from '../../panes/CodeMirrorEditorPane/CodeMirrorEditorPane';\nimport ResponseHeaders from '../../panes/ResponseHeadersPane/ResponseHeadersPane';\n\nconst ResponseTabGroup = ({ doc, setDoc, response, loading }) => {\n\n  // configuration for panes\n  const panes = [\n    {\n      menuItem: 'Response Body',\n      pane: <Tab.Pane \n              key=\"response-body\"\n              loading={loading}>\n              <CodeMirrorEditorPane\n                doc={doc}\n                setDoc={setDoc}\n                isEditable={false}/>\n            </Tab.Pane>  \n    },\n    {\n      menuItem: 'Response Headers',\n      pane: <Tab.Pane key=\"response-headers\">\n              <ResponseHeaders\n                response={response}/>\n            </Tab.Pane>  \n    }\n  ]\n\n  return (\n    <div className=\"response-tabs\">\n      <Tab \n        renderActiveOnly={false}\n        panes={panes}\n      />\n    </div>\n  );\n}\n\nexport default ResponseTabGroup;","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nconst ResponseMeta = ({ status, time, size}) => {\n\n  return (\n    <Grid.Row\n    columns={3}>\n    <Grid.Column\n      computer={2}\n      tablet={4}\n      mobile={4}>\n      <div><b>Status:</b> {status}</div>\n    </Grid.Column>\n    <Grid.Column\n      computer={2}\n      tablet={4}\n      mobile={4}>\n      <div><b>Time:</b> {time}</div>\n    </Grid.Column>\n    <Grid.Column\n      computer={2}\n      tablet={4}\n      mobile={4}>\n      <div><b>Size:</b> {size}</div>\n    </Grid.Column>\n  </Grid.Row>\n  )\n}\n\nexport default ResponseMeta;","import React, { useState, useEffect } from 'react';\nimport { Container, Grid } from 'semantic-ui-react';\nimport ResponseTabGroup from '../../tab-groups/ResponseTabGroup/ResponseTabGroup';\nimport prettyBytes from 'pretty-bytes';\nimport ResponseMeta from './ResponseMeta/ResponseMeta';\n\nconst ResponsePanel = ({ response, loading }) => {\n\n  const [ doc, setDoc ] = useState('{}');\n\n  useEffect(() => {\n    \n    if(response === null) return;\n    const jsonResponse = JSON.stringify(response.data, null, 2);\n    setDoc(jsonResponse);\n\n  }, [response, loading])\n\n  const hasResponse = !(response == null);\n  \n  let time = '';\n  let status = '';\n  let size = '';\n\n  if(hasResponse){\n    const hasCustomData = 'customData' in response;\n    const hasData = 'data' in response;\n    const hasHeaders = 'headers' in response;\n\n    status = hasResponse ? response.status : 0;\n\n    if(hasData && hasHeaders){\n      size = prettyBytes(\n        (hasResponse ? JSON.stringify(response.data).length : 0) + \n        (hasResponse ? JSON.stringify(response.headers).length : 0)\n      );\n    }\n\n    if(hasCustomData){\n      time = response.customData.time\n    }\n  }\n\n  return (\n    <div>\n      <Container fluid>\n        <h1>Response</h1>\n        <Grid>\n\n          <ResponseMeta\n            status={status}\n            time={time}\n            size={size}\n          />\n\n          <Grid.Row columns={1}>\n            <Grid.Column width={16}>\n              <ResponseTabGroup\n                doc={doc}\n                setDoc={setDoc}\n                response={response}\n                loading={loading}/>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n\n  );\n}\n\nexport default ResponsePanel;","import React, { useState } from 'react';\nimport RequestPanel from '../components/panels/RequestPanel/RequestPanel';\nimport ResponsePanel from '../components/panels/ResponsePanel/ResponsePanel';\nimport './App.css';\n\nconst App = () => {\n\n  const [ response, setResponse ] = useState(null);\n  const [ loading, setLoading ] = useState(false);\n\n  return (\n    <div className=\"app\">\n      <RequestPanel \n        setResponse={setResponse}\n        setLoading={setLoading}/>\n      <ResponsePanel \n        response={response}\n        loading={loading}/>\n    </div>\n  )\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nimport 'semantic-ui-css/semantic.min.css';\n\n\n// add axios interceptors for the entire app\n\nimport axios from 'axios';\n\nconst updateEndTime = (response) => {\n  response.customData = response.customData || {};\n  response.customData.time = new Date().getTime() - response.config.customData.startTime;\n  return response;\n};\n\n// request interceptor\naxios.interceptors.request.use(request => {\n  request.customData = request.customData || {};\n  request.customData.startTime = new Date().getTime();\n  return request;\n});\n\n// response interceptor\naxios.interceptors.response.use(updateEndTime, e => {\n  return Promise.reject(updateEndTime(e.response));\n})\n\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}